---
import { MonitorCog, Moon, Sun } from "lucide-react";
---

<div aria-label="Theme toggle">
  <div
    class="flex items-center justify-between gap-4 rounded-full bg-gray-200/80 px-5 py-2.5 backdrop-blur-md dark:bg-gray-700/80"
  >
    <button
      id="theme-toggle-system"
      class="theme-toggle-btn flex items-center justify-center data-[selected=true]:text-red-400 dark:data-[selected=true]:text-blue-200"
      aria-label="Usar tema del sistema"
      title="Usar tema del sistema"
      data-theme="system"
      type="button"
    >
      <MonitorCog size={18} />
    </button>
    <button
      id="theme-toggle-light"
      class="theme-toggle-btn flex items-center justify-center data-[selected=true]:text-red-400 dark:data-[selected=true]:text-blue-200"
      aria-label="Usar tema claro"
      title="Usar tema claro"
      data-theme="light"
      type="button"
    >
      <Sun size={18} />
    </button>
    <button
      id="theme-toggle-dark"
      class="theme-toggle-btn flex items-center justify-center data-[selected=true]:text-red-400 dark:data-[selected=true]:text-blue-200"
      aria-label="Usar tema oscuro"
      title="Usar tema oscuro"
      data-theme="dark"
      type="button"
    >
      <Moon size={18} />
    </button>
  </div>
</div>

<script>
  document.addEventListener("astro:page-load", () => {
    function applyTheme(theme: string) {
      document.documentElement.classList.remove("light", "dark");

      if (theme === "system") {
        // Detectar el tema del sistema
        const systemTheme = window.matchMedia("(prefers-color-scheme: dark)")
          .matches
          ? "dark"
          : "light";
        document.documentElement.classList.add(systemTheme);
      } else {
        document.documentElement.classList.add(theme);
      }

      updateButtonStates(theme);

      localStorage.setItem("theme", theme);
    }

    function updateButtonStates(selectedTheme: string) {
      const buttons = document.querySelectorAll(".theme-toggle-btn");
      buttons.forEach((button) => {
        const buttonTheme = button.getAttribute("data-theme");
        if (buttonTheme === selectedTheme) {
          button.setAttribute("data-selected", "true");
        } else {
          button.removeAttribute("data-selected");
        }
      });
    }

    function initializeTheme() {
      const savedTheme = localStorage.getItem("theme") || "system";
      applyTheme(savedTheme);
    }

    const buttons = document.querySelectorAll(".theme-toggle-btn");
    buttons.forEach((button) => {
      button.addEventListener("click", () => {
        const theme = button.getAttribute("data-theme") || "system";
        applyTheme(theme);
      });
    });

    initializeTheme();
  });
</script>

---
import { auth } from "@/lib/auth";
import { cn } from "@/lib/utils";
import { Link, LogOut } from "@lucide/astro";

interface Props {
  activeLink?: string;
}

const { activeLink } = Astro.props;

const navItems = [
  {
    name: "Links",
    href: "/dashboard",
    Icon: Link,
    id: "dashboard",
  },
];
const session = await auth.api.getSession({
  headers: Astro.request.headers,
});
---

<aside
  id="sidebar"
  class="fixed top-0 left-0 z-50 h-full w-64 -translate-x-full transform transition-transform duration-300 ease-in-out md:relative md:flex md:flex-shrink-0 md:translate-x-0"
>
  <div class="flex h-full w-64 flex-col">
    <div
      class="flex h-0 flex-1 flex-col border-r border-gray-200 bg-white dark:border-gray-800 dark:bg-gray-900"
    >
      <div
        class="flex h-[60px] items-center justify-between border-b border-gray-200 px-4 py-2 dark:border-gray-800"
      >
        <a href="/" class="text-base font-bold uppercase">Shorty-Link</a>
      </div>

      <div class="flex flex-shrink-0 p-4">
        <div class="flex items-center">
          <div class="flex-shrink-0">
            <img
              class="h-10 w-10 rounded-full"
              src={session?.user?.image || "/default-avatar.png"}
              alt="User avatar"
            />
          </div>
          <div class="ml-3">
            <p class="text-base font-medium text-gray-700 dark:text-gray-200">
              {session?.user?.name || "User Name"}
            </p>
          </div>
        </div>
      </div>

      <div class="flex flex-1 flex-col overflow-y-auto pt-5 pb-4">
        <nav class="flex-1 space-y-1 px-2">
          {
            navItems.map((item) => (
              <a
                href={item.href}
                class={cn(
                  "flex flex-row items-center justify-start gap-2 rounded-md px-2 py-2 text-base font-medium",
                  {
                    "text-gray-900 dark:text-gray-200": activeLink !== item.id,
                    "bg-blue-100 text-blue-700 dark:bg-blue-900 dark:text-white":
                      activeLink === item.id,
                  },
                )}
              >
                <span>{<item.Icon size={18} />}</span>
                <span>{item.name}</span>
              </a>
            ))
          }
        </nav>
      </div>

      <div
        class="flex flex-shrink-0 border-t border-gray-200 p-4 dark:border-gray-800"
      >
        <button
          type="button"
          id="logout-button"
          class="flex cursor-pointer items-center gap-2 rounded-lg bg-blue-700 px-5 py-2.5 text-sm font-medium text-white hover:bg-blue-800 focus:ring-4 focus:ring-blue-300 focus:outline-none dark:bg-blue-600 dark:hover:bg-blue-700 dark:focus:ring-blue-800"
        >
          <LogOut size={18} /> Logout
        </button>
      </div>
    </div>
  </div>
</aside>
<div
  id="sidebar-overlay"
  class="fixed inset-0 z-40 hidden cursor-pointer bg-black/50 backdrop-blur-sm transition-opacity md:hidden"
>
</div>
<script>
  import { signOut } from "@/lib/auth-client";
  const logoutButton = document.getElementById("logout-button");
  logoutButton?.addEventListener("click", async () => {
    await signOut();
    window.location.href = "/auth";
  });
</script>

<script>
  document.addEventListener("astro:page-load", () => {
    const sidebarToggle = document.getElementById("sidebar-toggle");
    const sidebar = document.getElementById("sidebar");
    const overlay = document.getElementById("sidebar-overlay");

    sidebarToggle?.addEventListener("click", () => {
      sidebar?.classList.toggle("translate-x-0");
      sidebar?.classList.toggle("-translate-x-full");
      overlay?.classList.toggle("hidden");
    });

    overlay?.addEventListener("click", () => {
      sidebar?.classList.add("-translate-x-full");
      sidebar?.classList.remove("translate-x-0");
      overlay?.classList.add("hidden");
    });
  });
</script>
